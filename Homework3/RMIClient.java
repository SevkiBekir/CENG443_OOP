//***************************************************************************************************************************************************

// TODO : imports

//***************************************************************************************************************************************************


//***************************************************************************************************************************************************

import javax.swing.*;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;

public class RMIClient extends JFrame {
    //=================================================================================================================================================

    private static String host = "localhost";
    private static String name = "RemoteDatabaseServer";
    private static RMIInterface remoteDatabase = null;

    //=================================================================================================================================================

    public RMIClient() throws RemoteException, NotBoundException, MalformedURLException {
        initComponents();

        // TODO
        // ....

        remoteDatabase = (RMIImplementation) Naming.lookup(name);


    }

    //=================================================================================================================================================

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgType = new javax.swing.ButtonGroup();
        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        rbQuery = new javax.swing.JRadioButton();
        rbUpdate = new javax.swing.JRadioButton();
        bSubmit = new javax.swing.JButton();
        sp1 = new javax.swing.JScrollPane();
        taSQL = new javax.swing.JTextArea();
        sp2 = new javax.swing.JScrollPane();
        tResult = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Remote Database");
        setLocationByPlatform(true);

        l1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l1.setText("Type :");

        l2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l2.setText("SQL :");

        l3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l3.setText("Result :");

        bgType.add(rbQuery);
        rbQuery.setSelected(true);
        rbQuery.setText("Query (Generates Result)");

        bgType.add(rbUpdate);
        rbUpdate.setText("Update (No Result)");

        bSubmit.setText("Submit");
        bSubmit.addActionListener( new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    bSubmitActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        });

        taSQL.setColumns(20);
        taSQL.setRows(5);
        taSQL.setText("SELECT * FROM Students ;");
        sp1.setViewportView(taSQL);

        tResult.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]
                        {
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null}
                        },
                new String[]
                        {
                                "Column 1", "Column 2", "Column 3"
                        }
        ));
        sp2.setViewportView(tResult);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(l2)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(sp1))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(l1)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(rbQuery)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(rbUpdate)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(bSubmit))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(l3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sp2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[]{l1, l2, l3});

        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(l1)
                                                        .addComponent(rbQuery)
                                                        .addComponent(rbUpdate))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(sp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(l2)))
                                        .addComponent(bSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(l3)
                                                .addGap(0, 137, Short.MAX_VALUE))
                                        .addComponent(sp2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSubmitActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException, SQLException//GEN-FIRST:event_bSubmitActionPerformed
    {//GEN-HEADEREND:event_bSubmitActionPerformed

        // TODO
        // ....
        // (Get the SQL processed, and then build a ResultTableModel instance, called "newModel")
        String sql = taSQL.getText();
        boolean isQuery = false;


        if (rbQuery.isSelected()) {
            isQuery = true;

        } else if (rbUpdate.isSelected()) {
            isQuery = false;
        }

        SerializableResult serializableResult = remoteDatabase.processSQL(sql, isQuery);
        ResultTableModel newModel = new ResultTableModel(serializableResult);


        tResult.setModel(newModel);
    }//GEN-LAST:event_bSubmitActionPerformed

    public static void main(String args[]) {
        /* Set the System look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("SystemLookAndFeel".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RMIClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RMIClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RMIClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RMIClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        if (args.length > 0) {
            host = args[0];
        }
        if (args.length > 1) {
            name = args[1];
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new RMIClient().setVisible(true);
                } catch (RemoteException e) {
                    e.printStackTrace();
                } catch (NotBoundException e) {
                    e.printStackTrace();
                } catch (MalformedURLException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bSubmit;
    private javax.swing.ButtonGroup bgType;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JRadioButton rbQuery;
    private javax.swing.JRadioButton rbUpdate;
    private javax.swing.JScrollPane sp1;
    private javax.swing.JScrollPane sp2;
    private javax.swing.JTable tResult;
    private javax.swing.JTextArea taSQL;
    // End of variables declaration//GEN-END:variables
}

//***************************************************************************************************************************************************
